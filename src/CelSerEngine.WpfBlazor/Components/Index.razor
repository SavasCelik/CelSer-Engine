@using CelSerEngine.Core.Models
@using CelSerEngine.Core.Extensions

<ThemeSetter />

<div class="d-flex vh-100">
    <div class="d-flex flex-column flex-grow-1 row-gap-1 m-2">
        <div class="d-flex flex-row gap-2">
            <button @onclick="OpenSelectProcess" type="button" class="btn btn-icon btn-light border @(EngineSession.SelectedProcess?.DisplayString == null ? "blink-animation" : "")">
                <img height="25" src="/SelectProcess.png" />
            </button>

            @if (ThemeManager.IsDark)
            {
                <button @onclick="ChangeTheme" style="right: 5px; top: 1px; height: 18px;" class="btn btn-icon btn-secondary lh-1 position-absolute">
                    <i class="bi bi-sun"></i>
                </button>
            }
            else
            {
                <button @onclick="ChangeTheme" style="right: 5px; top: 1px; height: 18px;" class="btn btn-icon btn-light lh-1 position-absolute">
                    <i class="bi bi-moon-stars-fill"></i>
                </button>
            }

            <div class="d-flex flex-column flex-grow-1 text-center">
                <div class="lh-sm">@(EngineSession.SelectedProcess?.DisplayString ?? "- No Process Selected -")</div>
                <div class="progress flex-grow-1">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: @ProgressBarValue%"></div>
                </div>
            </div>
        </div>

        <ContextMenu Items="ContextMenuItems" Selector="#scanResultsGrid .ag-row"></ContextMenu>

        <div id="split-0" class="d-flex flex-row gap-2">
            <VirtualizedAgGrid @ref="VirtualizedAgGridRef"
                               Items="ScanResultItems"
                               TItem="Models.ScanResultItem"
                               GetRowId='(x) => x.Address.ToString("X")'
                               OnRowDoubleClicked="OnScanResultItemDoubleClicked"
                               SerializableItem='(x) => new { Address = x.Address.ToString("X"), x.Value, x.PreviousValue }'>
            </VirtualizedAgGrid>

            <EditForm Model="SearchSubmitModel" Context="formContext" class="position-relative">
                <DataAnnotationsValidator />
                @if (_scanCancellationTokenSource != null)
                {
                    <button @onclick="CancelScan" type="submit" class="btn btn-light position-absolute z-3" style="top: 53px;" disabled="@(_scanCancellationTokenSource.IsCancellationRequested)">Cancel</button>
                }
                <fieldset disabled="@(EngineSession.SelectedProcess?.DisplayString == null || _scanCancellationTokenSource != null)">
                    <div class="d-flex flex-column gap-2 mt-4" style="width: 300px">
                        <div class="form-group has-search">
                            <span class="bi bi-search form-control-feedback"></span>
                            <InputText @bind-Value="SearchSubmitModel.SearchValue" id="value-text-field" type="search" class="form-control" placeholder="Value" />
                            <ValidationMessage For="() => SearchSubmitModel.SearchValue" />
                        </div>

                        @* buttons *@
                        <div class="d-flex gap-1 mb-3 @(_scanCancellationTokenSource != null ? "invisible" : "")">
                            @if (IsFirstScan)
                            {
                                <button @onclick="() => FirstScan(formContext)" type="submit" class="btn btn-ce-primary">First Scan</button>
                            }
                            else
                            {
                                <button @onclick="() => NextScan(formContext)" type="submit" class="btn btn-ce-primary">Next Scan</button>
                                <button @onclick="NewScan" type="button" class="btn btn-ce-outline-primary">New Scan</button>
                            }
                        </div>

                        @* scan type & value type *@
                        <div class="d-inline-flex gap-2">
                            <label for="scanCompareType" class="text-end align-self-center" style="width: 100px">Scan Type</label>
                            <select id="scanCompareType" @bind="SearchSubmitModel.SelectedScanCompareType" disabled="@(EngineSession.SelectedProcess?.DisplayString == null || _scanCancellationTokenSource != null)">
                                @foreach (var item in Enum.GetValues<ScanCompareType>())
                                {
                                    <option value="@item">@item.GetDisplayName()</option>
                                }
                            </select>
                        </div>
                        <div class="d-inline-flex gap-2">
                            <label for="selectScanDataType" class="text-end align-self-center" style="width: 100px">Value Type</label>
                            <select id="selectScanDataType" @bind="SearchSubmitModel.SelectedScanDataType" disabled="@(EngineSession.SelectedProcess?.DisplayString == null || !IsFirstScan || _scanCancellationTokenSource != null)">
                                @foreach (var item in Enum.GetValues<ScanDataType>())
                                {
                                    <option value="@item">@item.GetDisplayName()</option>
                                }
                            </select>
                        </div>

                    </div>
                </fieldset>
            </EditForm>
        </div>

        <div id="split-1" class="d-flex flex-grow-1">
            <TrackedItemsGrid @ref="TrackedItemsGridRef" TrackedItems="TrackedItems"></TrackedItemsGrid>
        </div>
    </div>
</div>