<ThemeSetter />

<div class="d-flex vh-100">
    <div class="d-flex flex-column flex-grow-1 row-gap-1 m-2">
        <div class="d-flex flex-row gap-2">
            <button @onclick="OpenSelectProcess" type="button" class="btn btn-icon btn-light border @(EngineSession.SelectedProcess?.DisplayString == null ? "blink-animation" : "")">
                <img height="25" src="/SelectProcess.png" />
            </button>

            @if (ThemeManager.IsDark)
            {
                <button @onclick="ChangeTheme" style="right: 5px; top: 1px; height: 18px;" class="btn btn-icon btn-secondary lh-1 position-absolute">
                    <i class="bi bi-sun"></i>
                </button>
            }
            else
            {
                <button @onclick="ChangeTheme" style="right: 5px; top: 1px; height: 18px;" class="btn btn-icon btn-light lh-1 position-absolute">
                    <i class="bi bi-moon-stars-fill"></i>
                </button>
            }

            <div class="d-flex flex-column flex-grow-1 text-center">
                <div class="lh-sm">@(EngineSession.SelectedProcess?.DisplayString ?? "- No Process Selected -")</div>
                <div class="progress flex-grow-1">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: @ProgressBarValue%"></div>
                </div>
            </div>
        </div>

        <div id="split-0" class="d-flex flex-row gap-2">
            <ScanResultItemsGrid @ref="ScanResultItemsGridRef" TrackedItemsGridRef="TrackedItemsGridRef" />

            <EditForm Model="SearchSubmitModel" Context="formContext" class="position-relative" style="width: 325px;">
                <DataAnnotationsValidator />
                @if (ScanCancellationTokenSource != null)
                {
                    <button @onclick="CancelScan" type="submit" class="btn btn-light position-absolute z-3" style="top: 53px;" disabled="@(ScanCancellationTokenSource.IsCancellationRequested)">Cancel</button>
                }
                <fieldset disabled="@(EngineSession.SelectedProcess?.DisplayString == null || IsScanning)">
                    <div class="d-flex flex-column gap-2 mt-4">

                        @if (SearchSubmitModel.SelectedScanCompareType == ScanCompareType.ValueBetween) {
                            <div class="form-group has-search">
                                <span class="bi bi-search form-control-feedback"></span>
                                <InputText @bind-Value="SearchSubmitModel.FromValue" id="value-text-field" type="search" class="form-control" placeholder="From" />
                                <ValidationMessage For="() => SearchSubmitModel.FromValue" />
                            </div>

                            <div class="form-group has-search">
                                <span class="bi bi-search form-control-feedback"></span>
                                <InputText @bind-Value="SearchSubmitModel.ToValue" type="search" class="form-control" placeholder="To" />
                                <ValidationMessage For="() => SearchSubmitModel.ToValue" />
                            </div>
                        }
                        else
                        {
                            <div class="form-group has-search">
                                <span class="bi bi-search form-control-feedback"></span>
                                <InputText @bind-Value="SearchSubmitModel.SearchValue" id="value-text-field" type="search" class="form-control" placeholder="Value" />
                                <ValidationMessage For="() => SearchSubmitModel.SearchValue" />
                            </div>
                        }

                        @* buttons *@
                        <div class="d-flex gap-1 mb-3 @(IsScanning ? "invisible" : "")">
                            @if (IsFirstScan)
                            {
                                <button @onclick="() => FirstScan(formContext)" type="submit" class="btn btn-ce-primary">First Scan</button>
                            }
                            else
                            {
                                <button @onclick="() => NextScan(formContext)" type="submit" class="btn btn-ce-primary">Next Scan</button>
                                <button @onclick="NewScan" type="button" class="btn btn-ce-outline-primary">New Scan</button>
                            }
                        </div>

                        @* scan type & value type *@
                        <div class="d-flex gap-2">
                            <label for="scanCompareType" class="text-nowrap align-self-center" style="width: 72px">Scan Type</label>
                            <select id="scanCompareType" @bind="SearchSubmitModel.SelectedScanCompareType" disabled="@(EngineSession.SelectedProcess?.DisplayString == null || IsScanning)">
                                @foreach (var item in Enum.GetValues<ScanCompareType>())
                                {
                                    <option value="@item">@item.GetDisplayName()</option>
                                }
                            </select>
                        </div>
                        <div class="d-flex gap-2">
                            <label for="selectScanDataType" class="text-nowrap align-self-center" style="width: 72px">Value Type</label>
                            <select id="selectScanDataType" @bind="SearchSubmitModel.SelectedScanDataType" disabled="@(EngineSession.SelectedProcess?.DisplayString == null || !IsFirstScan || IsScanning)">
                                @foreach (var item in Enum.GetValues<ScanDataType>())
                                {
                                    <option value="@item">@item.GetDisplayName()</option>
                                }
                            </select>
                        </div>

                    </div>
                </fieldset>

                @* memory scan options *@
                <fieldset disabled="@(EngineSession.SelectedProcess?.DisplayString == null || !IsFirstScan || IsScanning)" class="mt-4">
                    <div class="d-flex flex-column gap-2">
                        <div>Memory Scan Options:</div>

                        @* modules select *@
                        <div class="d-flex gap-2">
                            <select @onchange="OnSelectedModuleChanged" id="modulesSelect" disabled="@(EngineSession.SelectedProcess?.DisplayString == null || !IsFirstScan || IsScanning)">
                                <option value="all">All</option>
                            </select>
                        </div>
                        <div class="d-flex gap-2">
                            <label class="align-self-center">Start</label>
                            <InputText @bind-Value="SearchSubmitModel.StartAddress" class="form-control" placeholder="Start Address" />
                        </div>
                        <ValidationMessage For="() => SearchSubmitModel.StartAddress" class="validation-message ms-5" />
                        <div class="d-flex gap-2">
                            <label class="align-self-center">Stop</label>
                            <InputText @bind-Value="SearchSubmitModel.StopAddress" class="form-control" placeholder="Stop Address" />
                        </div>
                        <ValidationMessage For="() => SearchSubmitModel.StopAddress" class="validation-message ms-5" />
                        <div class="d-flex gap-2">
                            <div style="width: calc(325px / 3);">
                                <label for="writable" class="text-nowrap align-self-center">Writable</label>
                                <select id="writable" @bind="SearchSubmitModel.Writable" disabled="@(EngineSession.SelectedProcess?.DisplayString == null || !IsFirstScan || IsScanning)">
                                    @foreach (var item in Enum.GetValues<MemoryScanFilterOptions>())
                                    {
                                        <option value="@item">@item.GetDisplayName()</option>
                                    }
                                </select>
                            </div>

                            <div style="width: calc(325px / 3);">
                                <label for="executable" class="text-nowrap align-self-center">Executable</label>
                                <select id="executable" @bind="SearchSubmitModel.Executable" disabled="@(EngineSession.SelectedProcess?.DisplayString == null || !IsFirstScan || IsScanning)">
                                    @foreach (var item in Enum.GetValues<MemoryScanFilterOptions>())
                                    {
                                        <option value="@item">@item.GetDisplayName()</option>
                                    }
                                </select>
                            </div>

                            <div style="width: calc(325px / 3);">
                                <label for="copyOnWrite" class="text-nowrap align-self-center">Copy on Write</label>
                                <select id="copyOnWrite" @bind="SearchSubmitModel.CopyOnWrite" disabled="@(EngineSession.SelectedProcess?.DisplayString == null || !IsFirstScan || IsScanning)">
                                    @foreach (var item in Enum.GetValues<MemoryScanFilterOptions>())
                                    {
                                        <option value="@item">@item.GetDisplayName()</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="d-flex gap-2">
                            <label for="memoryTypes" class="text-nowrap align-self-center">Memory Types</label>
                            <select multiple id="memoryTypes" @bind="SearchSubmitModel.MemoryTypes" disabled="@(EngineSession.SelectedProcess?.DisplayString == null || !IsFirstScan || IsScanning)">
                                @foreach (var item in Enum.GetValues<MemoryType>())
                                {
                                    <option value="@item">@item.GetDisplayName()</option>
                                }
                            </select>
                        </div>
                    </div>
                </fieldset>
            </EditForm>
        </div>

        <div id="split-1" class="d-flex flex-grow-1">
            <TrackedItemsGrid @ref="TrackedItemsGridRef"></TrackedItemsGrid>
        </div>
    </div>
</div>